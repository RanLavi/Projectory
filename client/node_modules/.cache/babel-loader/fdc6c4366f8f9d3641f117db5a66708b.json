{"ast":null,"code":"import _defineProperty from \"/home/spectory/Documents/Projectory2/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/spectory/Documents/Projectory2/my-app/src/components/projectsList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Component } from \"react\"; // import \"./layout.scss\"\n\nimport \"./projectsList.scss\";\nimport history from \"../index\";\nimport Layout from './layout';\nimport ProjectsComponent from \"./projects\";\nimport TasksComponent from \"./tasks\";\n\nclass ProjectsListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleProjectClick = () => {};\n\n    this.state = {\n      projects: [],\n      chosenProjectIndex: -1 // tasks: [],\n\n    }; // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    // this.toggleShow = this.toggleShow.bind(this);\n  }\n\n  addProject() {\n    // console.log(\"Anastasia\");\n    // var newProject = new ProjectsComponent();\n    const updatedProjectsArray = [...this.state.projects, {\n      name: \"Add New Project name\",\n      tasks: []\n    }];\n    const chosenProjectIndex = updatedProjectsArray.length - 1; // this.setState({projects: [...this.state.projects, {name: \"Add New Project name\", tasks: []}], chosenProject: });\n\n    this.setState({\n      projects: updatedProjectsArray,\n      chosenProjectIndex\n    });\n  }\n\n  addTask() {\n    const _this$state = this.state,\n          projects = _this$state.projects,\n          chosenProjectIndex = _this$state.chosenProjectIndex;\n\n    const updatedProjectsArray = _objectSpread({}, projects);\n\n    updatedProjectsArray[chosenProjectIndex].tasks.push({\n      name: \"Add New Task description\"\n    }); // this.setState({tasks: [...this.state.tasks, {name: \"Add New Task description\"}]});\n\n    this.setState({\n      projects: updatedProjectsArray\n    });\n  } // onSubmit = () => {\n  //   history.push(\"/\");\n  // }\n  // checkbox(){\n  //   if(this.state.isClicked){\n  //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n  //     this.state.isClicked = false;\n  //   }\n  //   else{\n  //     document.querySelector(\"project-item\").classList.add(\"cross\");\n  //     this.state.isClicked = true;\n  //   }\n  // } \n\n\n  render() {\n    const _this$state2 = this.state,\n          projects = _this$state2.projects,\n          chosenProjectIndex = _this$state2.chosenProjectIndex;\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projects-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"my-projects-header-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"My Projects\"), React.createElement(\"div\", {\n      className: \"new-project-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-project-header-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"New Project\"), React.createElement(\"div\", {\n      className: \"new-project-header-icon\",\n      onClick: () => this.addProject(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"project-items-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tasksList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tasks-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current-project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Project name\"), React.createElement(\"div\", {\n      className: \"new-task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-task-header-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"New Task\"), React.createElement(\"div\", {\n      className: \"new-task-header-icon\",\n      onClick: () => this.addTask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"task-items-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, chosenProjectIndex !== -1 && projects[chosenProjectIndex].tasks.map((t, j) => React.createElement(TasksComponent, {\n      key: \"\".concat(t.name, \"_\").concat(j),\n      name: t.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default ProjectsListComponent;","map":{"version":3,"sources":["/home/spectory/Documents/Projectory2/my-app/src/components/projectsList.js"],"names":["React","Component","history","Layout","ProjectsComponent","TasksComponent","ProjectsListComponent","constructor","props","handleProjectClick","state","projects","chosenProjectIndex","addProject","updatedProjectsArray","name","tasks","length","setState","addTask","push","render","map","t","j"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Component} from \"react\";\n// import \"./layout.scss\"\nimport \"./projectsList.scss\"\nimport history from \"../index\"\nimport Layout from './layout'\nimport ProjectsComponent from \"./projects\"\nimport TasksComponent from \"./tasks\"\n\nclass ProjectsListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: [],\n      chosenProjectIndex: -1,\n      // tasks: [],\n    };\n\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    // this.toggleShow = this.toggleShow.bind(this);\n  }\n\n\naddProject(){\n  // console.log(\"Anastasia\");\n  // var newProject = new ProjectsComponent();\n  const updatedProjectsArray = [...this.state.projects, {name: \"Add New Project name\", tasks: []}];\n  const chosenProjectIndex = updatedProjectsArray.length -1;\n  // this.setState({projects: [...this.state.projects, {name: \"Add New Project name\", tasks: []}], chosenProject: });\n  this.setState({projects: updatedProjectsArray, chosenProjectIndex});\n}\n\naddTask(){\n  const {projects, chosenProjectIndex} = this.state;\n  const updatedProjectsArray = {...projects};\n  updatedProjectsArray[chosenProjectIndex].tasks.push({name: \"Add New Task description\"});\n\n  // this.setState({tasks: [...this.state.tasks, {name: \"Add New Task description\"}]});\n  this.setState({projects: updatedProjectsArray});\n}\n\n// onSubmit = () => {\n//   history.push(\"/\");\n// }\n\n  // checkbox(){\n  //   if(this.state.isClicked){\n  //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n      \n  //     this.state.isClicked = false;\n  //   }\n  //   else{\n  //     document.querySelector(\"project-item\").classList.add(\"cross\");\n  //     this.state.isClicked = true;\n  //   }\n  // } \n\n  handleProjectClick = () => {\n\n  }\n\n  render() {\n    const {projects, chosenProjectIndex} = this.state;\n    return (\n      <Layout>\n          <div className=\"projectsList\">\n            <div className=\"projects-header\">\n              <div className=\"my-projects-header-text\">My Projects</div>\n              <div className=\"new-project-header\">\n                <div className=\"new-project-header-text\">New Project</div>\n                <div className=\"new-project-header-icon\" onClick={() => this.addProject()}></div>\n                </div>\n            </div>\n            <div className=\"project-items-container\">\n            {/* {this.state.projects.map((p, i) => <ProjectsComponent name={p.name} handleClick={() => this.handleProjectClick()} />)} */}\n            {/* {projects.map((p, i) => <ProjectsComponent name={p.name} handleClick={this.handleProjectClick} />)} */}\n\n            </div>\n          </div>\n          <div className=\"tasksList\">\n            <div className=\"tasks-header\">\n              <div className=\"current-project\">Project name</div>\n              <div className=\"new-task-header\">\n                <div className=\"new-task-header-text\">New Task</div>\n                <div className=\"new-task-header-icon\" onClick={() => this.addTask()}></div>\n              </div>\n              </div>\n                 <div className=\"task-items-container\">\n                  {chosenProjectIndex !== -1 && projects[chosenProjectIndex].tasks.map((t, j) => <TasksComponent key={`${t.name}_${j}`} name={t.name} />)}\n\n\n            </div>\n          </div>\n      </Layout>\n    );\n  }\n}\n\nexport default ProjectsListComponent;"]},"metadata":{},"sourceType":"module"}