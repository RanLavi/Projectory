{"ast":null,"code":"var _jsxFileName = \"/home/spectory/Documents/Projectory2/my-app/src/components/settings.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport Layout from './layout';\nimport \"./settings.scss\"; // import \"../js/actions/index\"\n// import \"../js/constants/action-types\"\n\nimport * as actions from '../js/actions';\nimport { connect } from 'react-redux';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickedDisplay: \"Dark\"\n    };\n  }\n\n  // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  // this.toggleShow = this.toggleShow.bind(this);\n  // onSubmit = () => {\n  //   history.push(\"/\");\n  // }\n  // checkbox(){\n  //   if(this.state.isClicked){\n  //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n  //     this.state.isClicked = false;\n  //   }\n  //   else{\n  //     document.querySelector(\"project-item\").classList.add(\"cross\");\n  //     this.state.isClicked = true;\n  //   }\n  // } \n  click(color) {\n    console.log(color);\n    this.setState({\n      clickedDisplay: color\n    });\n  }\n\n  render() {\n    const display = this.props.display;\n    const clickedDisplay = this.state.clickedDisplay;\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Themes\"), React.createElement(\"div\", {\n      className: \"settings-header-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-header-options-cancel \".concat(display),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"div\", {\n      className: \"settings-header-options-save \".concat(display),\n      onClick: () => this.props.switchDisplay(clickedDisplay),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(\"div\", {\n      className: \"pick-theme-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Pick your theme\"), React.createElement(\"div\", {\n      className: \"themes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dark-theme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dark-theme-icon\",\n      onClick: () => this.click(\"Dark\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dark-theme-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Dark (Default)\")), React.createElement(\"div\", {\n      className: \"turquoise-theme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"turquoise-theme-icon\",\n      onClick: () => this.click(\"Turquoise\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"turquoise-theme-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Turquoise\")))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log('state ? ', state);\n  return {\n    display: state.display\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    switchDisplay: display => dispatch(actions.switchDisplay(display))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/home/spectory/Documents/Projectory2/my-app/src/components/settings.js"],"names":["React","Component","Layout","actions","connect","Settings","constructor","props","state","clickedDisplay","click","color","console","log","setState","render","display","switchDisplay","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Component} from \"react\";\nimport Layout from './layout'\nimport \"./settings.scss\"\n// import \"../js/actions/index\"\n// import \"../js/constants/action-types\"\nimport * as actions from '../js/actions';\nimport { connect } from 'react-redux';\n\nclass Settings extends Component {\n    constructor(props) {\n      super(props);\n  \n    this.state = {\n      clickedDisplay: \"Dark\",\n    };\n  };\n  \n      // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n      // this.toggleShow = this.toggleShow.bind(this);\n    \n  \n  // onSubmit = () => {\n  //   history.push(\"/\");\n  // }\n  \n    // checkbox(){\n    //   if(this.state.isClicked){\n    //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n        \n    //     this.state.isClicked = false;\n    //   }\n    //   else{\n    //     document.querySelector(\"project-item\").classList.add(\"cross\");\n    //     this.state.isClicked = true;\n    //   }\n    // } \n\n    click(color){\n      console.log(color);\n        this.setState({ clickedDisplay: color });\n    }\n  \n    render() {\n      const { display } = this.props;\n      const { clickedDisplay } = this.state;\n      return (\n        <Layout>\n          <div className=\"settings-layout\">\n              <div className=\"settings-header-container\">\n                  <div className=\"settings-header-title\">Themes</div>\n                  <div className=\"settings-header-options\">\n                      <div className={`settings-header-options-cancel ${display}`}>Cancel</div>\n                      <div className={`settings-header-options-save ${display}`} onClick = {() => this.props.switchDisplay(clickedDisplay)}>Save</div>\n                  </div>\n              </div>\n              <div className=\"pick-theme-text\">Pick your theme</div>\n              <div className=\"themes\">\n                  <div className=\"dark-theme\">\n                      <div className=\"dark-theme-icon\" onClick = {() => this.click(\"Dark\")}/>\n                      <div className=\"dark-theme-text\">Dark (Default)</div>\n                  </div>\n                  <div className=\"turquoise-theme\">\n                      <div className=\"turquoise-theme-icon\" onClick = {() => this.click(\"Turquoise\")}/>\n                      <div className=\"turquoise-theme-text\">Turquoise</div>\n                  </div>\n              </div>\n          </div>\n        </Layout>\n          )\n      }\n  }\n\n  function mapStateToProps(state) {\n    console.log('state ? ', state);\n    return { \n      display: state.display\n    }\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      switchDisplay: display => dispatch(actions.switchDisplay(display)),\n      \n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Settings);"]},"metadata":{},"sourceType":"module"}