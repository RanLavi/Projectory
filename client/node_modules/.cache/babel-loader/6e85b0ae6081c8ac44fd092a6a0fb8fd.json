{"ast":null,"code":"var _jsxFileName = \"/home/spectory/Documents/Projectory nodejs/client/src/components/login.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport \"./login.scss\";\nimport history from \"../index\";\nimport { connect } from 'react-redux';\nimport * as actions from '../js/actions';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: true,\n      password: \"\",\n      username: \"\"\n    };\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.toggleShow = this.toggleShow.bind(this);\n    this.onSubmit = this.onSubmit.bind(this); // window['login'] = this;\n  }\n\n  async onSubmit() {\n    // if(true) // In case we want to check something\n    // let emailAddress = document.getElementsByClassName('emailText')[0].innerText;\n    // let password = document.getElementsByClassName('showPasswordText')[0].innerHTML;\n    if (this.state.password === '' || this.state.username === '') {\n      return;\n    }\n\n    console.log('still working');\n    console.log(this.state.username);\n    debugger;\n    const response = await fetch('http://localhost:5000/');\n    const myJson = await response.json(); // console.log(myJson);\n\n    history.push(\"/projects\");\n  }\n\n  handlePasswordChange(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleUsernameChange(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  toggleShow() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.password) {\n      this.setState({\n        password: this.props.password\n      });\n    }\n  }\n\n  render() {\n    const display = this.props.display;\n    return React.createElement(\"div\", {\n      className: \"loginPageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo \".concat(display),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"loginBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signIn \".concat(display),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"div\", {\n      className: \"enterDetailsBelow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Enter your details below\"), React.createElement(\"div\", {\n      className: \"enterEmailAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Email Address\"), React.createElement(\"div\", {\n      className: \"rectangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailAddress\",\n      value: this.state.username,\n      className: \"emailText\",\n      placeholder: \"Type your email here\",\n      onChange: this.handleUsernameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"enterPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Password\", React.createElement(\"span\", {\n      className: \"forgotPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Forgot your password?\")), React.createElement(\"div\", {\n      className: \"rectangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: this.state.hidden ? \"password\" : \"text\",\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      name: \"password\",\n      className: \"passwordText\",\n      placeholder: \"Type your password here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: this.state.hidden ? \"showPassword\" : \"showPasswordText \".concat(display),\n      onClick: this.toggleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"submitForm \".concat(display),\n      type: \"button\",\n      value: \"Sign in\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    username: state.username,\n    display: state.display\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    makeAction: display => dispatch(actions.switchDisplay(display))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);","map":{"version":3,"sources":["/home/spectory/Documents/Projectory nodejs/client/src/components/login.js"],"names":["React","Component","history","connect","actions","LoginComponent","constructor","props","state","hidden","password","username","handlePasswordChange","bind","handleUsernameChange","toggleShow","onSubmit","console","log","response","fetch","myJson","json","push","e","setState","target","value","componentDidMount","render","display","mapStateToProps","mapDispatchToProps","dispatch","makeAction","switchDisplay"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Component} from \"react\";\nimport \"./login.scss\"\nimport history from \"../index\"\nimport { connect } from 'react-redux';\nimport * as actions from '../js/actions';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hidden: true,\n      password: \"\",\n      username: \"\",\n    };\n\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.toggleShow = this.toggleShow.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n\n    // window['login'] = this;\n  }\n\nasync onSubmit() {\n  // if(true) // In case we want to check something\n  // let emailAddress = document.getElementsByClassName('emailText')[0].innerText;\n  // let password = document.getElementsByClassName('showPasswordText')[0].innerHTML;\n  if(this.state.password === '' || this.state.username === ''){\n    return;\n}\n\n  console.log('still working');\n  console.log(this.state.username);\n  debugger;\n  const response = await fetch('http://localhost:5000/');\n  const myJson = await response.json();\n  // console.log(myJson);\n  history.push(\"/projects\");\n}\n\n  handlePasswordChange(e) {\n    this.setState({ password: e.target.value });\n  }\n\n    handleUsernameChange(e) {\n    this.setState({ username: e.target.value });\n  }\n\n  toggleShow() {\n    this.setState({ hidden: !this.state.hidden });\n  }\n\n  componentDidMount() {\n    if (this.props.password) {\n      this.setState({ password: this.props.password });\n    }\n  }\n\n  render() {\n    const { display } = this.props;\n    return (\n      <div className=\"loginPageContainer\">\n        <div className={`logo ${display}`}></div>\n        <div className=\"loginBox\">\n          <div className={`signIn ${display}`}>Sign in</div>\n          <div className=\"enterDetailsBelow\">Enter your details below</div>\n            <div className=\"enterEmailAddress\">Email Address</div>\n            <div className=\"rectangle\">\n              <input type=\"text\" name=\"emailAddress\" value={this.state.username} className=\"emailText\" placeholder=\"Type your email here\" onChange={this.handleUsernameChange}/>\n            </div>\n            <div className=\"enterPassword\">Password<span className=\"forgotPassword\">Forgot your password?</span></div>\n            <div className=\"rectangle\">\n              <input type={this.state.hidden ? \"password\" : \"text\"} value={this.state.password} onChange={this.handlePasswordChange} name=\"password\" className=\"passwordText\" placeholder=\"Type your password here\"/>\n              <span className={this.state.hidden ? \"showPassword\" : `showPasswordText ${display}`} onClick={this.toggleShow}></span>\n            </div>\n            <input className={`submitForm ${display}`} type=\"button\" value=\"Sign in\" onClick={this.onSubmit}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n    username: state.username,\n    display: state.display\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    makeAction: display => dispatch(actions.switchDisplay(display)),\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);"]},"metadata":{},"sourceType":"module"}