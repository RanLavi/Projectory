{"ast":null,"code":"import _defineProperty from \"/home/spectory/Documents/Projectory nodejs/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as T from \"../constants/action-types\";\nimport initialState from \"../state/state\";\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case T.SWITCH_DISPLAY:\n      return _objectSpread({}, state, {\n        display: action.payload\n      });\n\n    case T.ACTIVE_POPUP:\n      return _objectSpread({}, state, {\n        popup: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer; // import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './routing';\n// import * as serviceWorker from './serviceWorker';\n// import { createBrowserHistory } from \"history\";\n// export default createBrowserHistory()\n// ReactDOM.render(<App />, document.getElementById('root'));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/home/spectory/Documents/Projectory nodejs/client/src/js/reducers/index.js"],"names":["T","initialState","rootReducer","state","action","type","SWITCH_DISPLAY","display","payload","ACTIVE_POPUP","popup"],"mappings":";;;;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAGF,YAA7B,EAA2CG,MAA3C,EAAmD;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,CAAC,CAACM,cAAP;AACI,+BAAYH,KAAZ;AAAmBI,QAAAA,OAAO,EAAEH,MAAM,CAACI;AAAnC;;AACJ,SAAKR,CAAC,CAACS,YAAP;AACI,+BAAWN,KAAX;AAAkBO,QAAAA,KAAK,EAAEN,MAAM,CAACI;AAAhC;;AACJ;AACI,aAAOL,KAAP;AANR;AAQH;;AACD,eAAeD,WAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA","sourcesContent":["import * as T from \"../constants/action-types\";\nimport initialState from \"../state/state\";\n\nfunction rootReducer(state = initialState, action) {\n    switch(action.type){\n        case T.SWITCH_DISPLAY: \n            return { ...state, display: action.payload };\n        case T.ACTIVE_POPUP:\n            return {...state, popup: action.payload};\n        default:\n            return state;\n    }\n}\nexport default rootReducer;\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './routing';\n// import * as serviceWorker from './serviceWorker';\n// import { createBrowserHistory } from \"history\";\n// export default createBrowserHistory()\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}