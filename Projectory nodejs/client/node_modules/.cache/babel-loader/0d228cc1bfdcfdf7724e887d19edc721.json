{"ast":null,"code":"var _jsxFileName = \"/home/spectory/Documents/Projectory nodejs/client/src/components/settings.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport Layout from './layout';\nimport \"./settings.scss\"; // import \"../js/actions/index\"\n// import \"../js/constants/action-types\"\n\nimport * as actions from '../js/actions';\nimport { connect } from 'react-redux';\n\nclass SettingsComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isBordered = currentColor => currentColor === this.state.clickedDisplay;\n\n    this.state = {\n      clickedDisplay: \"\"\n    };\n    this.changeDisplay = this.changeDisplay.bind(this);\n  }\n\n  // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  // this.toggleShow = this.toggleShow.bind(this);\n  // onSubmit = () => {\n  //   history.push(\"/\");\n  // }\n  // checkbox(){\n  //   if(this.state.isClicked){\n  //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n  //     this.state.isClicked = false;\n  //   }\n  //   else{\n  //     document.querySelector(\"project-item\").classList.add(\"cross\");\n  //     this.state.isClicked = true;\n  //   }\n  // } \n  async changeDisplay() {\n    if (this.state.clickedDisplay === '') {\n      return;\n    }\n\n    const response = await fetch('http://localhost:5000/changeTheme', {\n      method: 'POST',\n      // mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"display\": this.state.clickedDisplay\n      })\n    });\n    const myJson = await response.json();\n\n    if (this.props.display != this.state.clickedDisplay) {\n      this.props.switchDisplay(this.state.clickedDisplay);\n    }\n  }\n\n  click(color) {\n    // console.log(color);\n    this.setState({\n      clickedDisplay: color\n    });\n  }\n\n  render() {\n    const display = this.props.display;\n    const clickedDisplay = this.state.clickedDisplay;\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Themes\"), React.createElement(\"div\", {\n      className: \"settings-header-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"settings-header-options-cancel \".concat(display),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"div\", {\n      className: \"settings-header-options-save \".concat(display),\n      onClick: () => this.changeDisplay(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(\"div\", {\n      className: \"pick-theme-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Pick your theme\"), React.createElement(\"div\", {\n      className: \"themes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dark-theme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dark-theme-icon \".concat(this.isBordered('Dark') ? 'bordered' : ''),\n      onClick: () => this.click(\"Dark\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dark-theme-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Dark (Default)\")), React.createElement(\"div\", {\n      className: \"turquoise-theme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"turquoise-theme-icon \".concat(this.isBordered('Turquoise') ? 'bordered' : ''),\n      onClick: () => this.click(\"Turquoise\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"turquoise-theme-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Turquoise\")))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log('state ? ', state);\n  return {\n    display: state.display\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    switchDisplay: display => dispatch(actions.switchDisplay(display))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsComponent);","map":{"version":3,"sources":["/home/spectory/Documents/Projectory nodejs/client/src/components/settings.js"],"names":["React","Component","Layout","actions","connect","SettingsComponent","constructor","props","isBordered","currentColor","state","clickedDisplay","changeDisplay","bind","response","fetch","method","headers","body","JSON","stringify","myJson","json","display","switchDisplay","click","color","setState","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Component} from \"react\";\nimport Layout from './layout'\nimport \"./settings.scss\"\n// import \"../js/actions/index\"\n// import \"../js/constants/action-types\"\nimport * as actions from '../js/actions';\nimport { connect } from 'react-redux';\n\nclass SettingsComponent extends Component {\n    constructor(props) {\n      super(props);\n  \n    this.state = {\n      clickedDisplay: \"\",\n    };\n    this.changeDisplay = this.changeDisplay.bind(this);\n  };\n  \n      // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n      // this.toggleShow = this.toggleShow.bind(this);\n    \n  \n  // onSubmit = () => {\n  //   history.push(\"/\");\n  // }\n  \n    // checkbox(){\n    //   if(this.state.isClicked){\n    //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n        \n    //     this.state.isClicked = false;\n    //   }\n    //   else{\n    //     document.querySelector(\"project-item\").classList.add(\"cross\");\n    //     this.state.isClicked = true;\n    //   }\n    // } \n\n    async changeDisplay(){\n      if(this.state.clickedDisplay === ''){\n        return;\n      }\n        const response = await fetch('http://localhost:5000/changeTheme', {\n        method: 'POST',\n        // mode: 'no-cors',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify( {\"display\" : this.state.clickedDisplay})\n        });\n        const myJson = await response.json();\n        if(this.props.display != this.state.clickedDisplay){\n          this.props.switchDisplay(this.state.clickedDisplay);\n        }\n        }\n\n    click(color){\n      // console.log(color);\n        this.setState({ clickedDisplay: color });\n    }\n\n    isBordered = (currentColor) => currentColor === this.state.clickedDisplay;\n  \n    render() {\n      const { display } = this.props;\n      const { clickedDisplay } = this.state;\n      return (\n        <Layout>\n          <div className=\"settings-layout\">\n              <div className=\"settings-header-container\">\n                  <div className=\"settings-header-title\">Themes</div>\n                  <div className=\"settings-header-options\">\n                      <div className={`settings-header-options-cancel ${display}`}>Cancel</div>\n                      {/* <div className={`settings-header-options-save ${display}`} onClick = {() => this.props.switchDisplay(clickedDisplay)}>Save</div> */}\n                       <div className={`settings-header-options-save ${display}`} onClick = {() => this.changeDisplay()}>Save</div>\n                  </div>\n              </div>\n              <div className=\"pick-theme-text\">Pick your theme</div>\n              <div className=\"themes\">\n                  <div className=\"dark-theme\">\n                      <div className={`dark-theme-icon ${this.isBordered('Dark') ? 'bordered' : ''}`} onClick = {() => this.click(\"Dark\")}/>\n                      <div className=\"dark-theme-text\">Dark (Default)</div>\n                  </div>\n                  <div className=\"turquoise-theme\">\n                      <div className={`turquoise-theme-icon ${this.isBordered('Turquoise') ? 'bordered' : ''}`} onClick = {() => this.click(\"Turquoise\")}/>\n                      <div className=\"turquoise-theme-text\">Turquoise</div>\n                  </div>\n              </div>\n          </div>\n        </Layout>\n          )\n      }\n  }\n\n  function mapStateToProps(state) {\n    // console.log('state ? ', state);\n    return { \n      display: state.display\n    }\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      switchDisplay: display => dispatch(actions.switchDisplay(display)),\n      \n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(SettingsComponent);"]},"metadata":{},"sourceType":"module"}