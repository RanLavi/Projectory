{"ast":null,"code":"var _jsxFileName = \"/home/spectory/Documents/Projectory nodejs/client/src/components/projects.js\";\nimport React from \"react\";\nimport { Component } from \"react\"; // import \"./layout.scss\"\n\nimport \"./projects.scss\";\nimport history from \"../index\";\nimport Layout from './layout';\nimport ProjectsListComponent from \"./projectsList\";\n\nclass ProjectsComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onProjectClick = () => {\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n\n    this.state = {\n      isChecked: false,\n      project_name: 'Add a new project name'\n    };\n    this.handleProjectNameChange = this.handleProjectNameChange.bind(this);\n    this.updateProjectNameDB = this.updateProjectNameDB.bind(this); // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    // this.toggleShow = this.toggleShow.bind(this);\n  } // addProject(){\n  //   let projectItem = document.createElement(\"div\").classList.add(\"project-item\");\n  //   let projectPickByName = document.createElement(\"div\").classList.add(\"project-pick-by-name\");\n  //   let projectPick = document.createElement(\"div\").classList.add(\"project-pick\");\n  //   let projectName = document.createElement(\"div\").classList.add(\"project-name\");\n  //   let projectItemsContainer = document.getElementsByClassName(\"project-items-container\")[0];\n  // }\n  // onSubmit = () => {\n  //   history.push(\"/\");\n  // }\n  // checkbox(){\n  //   if(this.state.isClicked){\n  //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n  //     this.state.isClicked = false;\n  //   }\n  //   else{\n  //     document.querySelector(\"project-item\").classList.add(\"cross\");\n  //     this.state.isClicked = true;\n  //   }\n  // } \n  //   createDate(){\n  //       var date = new Date(`new Date().getFullYear(), '/', new Date().getMonth() , '/', new Date().getDate()`);\n  //       return date;\n  //   }\n\n\n  handleProjectNameChange(e) {\n    this.setState({\n      project_name: e.target.value\n    });\n    debugger;\n    this.updateProjectNameDB();\n  }\n\n  async updateProjectNameDB() {\n    debugger;\n    const response = await fetch('http://localhost:5000/renameProject', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        'project_name': this.state.project_name,\n        'project_id': this.props.data,\n        \"email\": this.props.email\n      })\n    });\n    debugger;\n  } // deleteProject(){\n  //   document.getElementsByClassName(\"project-item\")[0].remove();\n  // }\n\n  /* checking if the tab(container) is the current clicked tab according to the clickedTab state */\n  // isProjectClicked = (currentProject) => this.state.isChecked.includes(currentProject);\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"project-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"project-pick \".concat(this.state.isChecked ? 'checked' : ''),\n      onClick: () => this.onProjectClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"project-name-and-date \".concat(this.state.isChecked ? 'cross' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"project-name\",\n      type: \"text\",\n      placeholder: \"Add a new project name\",\n      onChange: this.handleProjectNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"project-create-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Today\"), React.createElement(\"div\", {\n      className: \"project-delete\",\n      onClick: e => {\n        // console.log(\"e ? \", e);\n        e.stopPropagation();\n        this.props.deleteProjectFromParent(this.props.data);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ProjectsComponent;","map":{"version":3,"sources":["/home/spectory/Documents/Projectory nodejs/client/src/components/projects.js"],"names":["React","Component","history","Layout","ProjectsListComponent","ProjectsComponent","constructor","props","onProjectClick","setState","isChecked","state","project_name","handleProjectNameChange","bind","updateProjectNameDB","e","target","value","response","fetch","method","headers","body","JSON","stringify","data","email","render","stopPropagation","deleteProjectFromParent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Component} from \"react\";\n// import \"./layout.scss\"\nimport \"./projects.scss\"\nimport history from \"../index\"\nimport Layout from './layout'\nimport ProjectsListComponent from \"./projectsList\"\n\n\nclass ProjectsComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        isChecked: false,\n        project_name: 'Add a new project name',\n    };\n\n\n    this.handleProjectNameChange = this.handleProjectNameChange.bind(this);\n    this.updateProjectNameDB = this.updateProjectNameDB.bind(this);\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    // this.toggleShow = this.toggleShow.bind(this);\n  }\n\n// addProject(){\n//   let projectItem = document.createElement(\"div\").classList.add(\"project-item\");\n//   let projectPickByName = document.createElement(\"div\").classList.add(\"project-pick-by-name\");\n//   let projectPick = document.createElement(\"div\").classList.add(\"project-pick\");\n//   let projectName = document.createElement(\"div\").classList.add(\"project-name\");\n//   let projectItemsContainer = document.getElementsByClassName(\"project-items-container\")[0];\n// }\n\n// onSubmit = () => {\n//   history.push(\"/\");\n// }\n\n  // checkbox(){\n  //   if(this.state.isClicked){\n  //     document.querySelector(\"project-item\").classList.remove(\"cross\");\n      \n  //     this.state.isClicked = false;\n  //   }\n  //   else{\n  //     document.querySelector(\"project-item\").classList.add(\"cross\");\n  //     this.state.isClicked = true;\n  //   }\n  // } \n\n//   createDate(){\n//       var date = new Date(`new Date().getFullYear(), '/', new Date().getMonth() , '/', new Date().getDate()`);\n//       return date;\n//   }\n\n  onProjectClick = () => {\n    this.setState({ isChecked: !this.state.isChecked });\n  }\n\n  handleProjectNameChange(e) {\n    this.setState({ project_name: e.target.value });\n    debugger;\n    this.updateProjectNameDB();\n  }\n\n  async updateProjectNameDB(){\n    debugger;\n    const response = await fetch('http://localhost:5000/renameProject', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json',\n    'Accept': 'application/json' },\n    body: JSON.stringify({'project_name' : this.state.project_name, 'project_id' : this.props.data, \"email\" : this.props.email})\n    });\n    debugger;\n  }\n\n  // deleteProject(){\n  //   document.getElementsByClassName(\"project-item\")[0].remove();\n  // }\n\n  /* checking if the tab(container) is the current clicked tab according to the clickedTab state */ \n  // isProjectClicked = (currentProject) => this.state.isChecked.includes(currentProject);\n  render() {\n    return (\n            <div className='project-item'>\n            {/* <div className=\"project-pick-container\"> */}\n                {/* <div className=\"project-pick\" onClick={() => this.crossProject()}></div> */}\n                    {/* <div className={`project-pick ${this.isProjectClicked() ? 'checked' : ''}`} onClick={() => this.onProjectClick()}/> */}\n                    <div className={`project-pick ${this.state.isChecked ? 'checked' : ''}`} onClick={() => this.onProjectClick()}/>\n                    <div className={`project-name-and-date ${this.state.isChecked ? 'cross' : ''}`}>\n                <input className=\"project-name\" type=\"text\" placeholder=\"Add a new project name\" onChange={this.handleProjectNameChange}/>\n            {/* </div> */}\n            <div className=\"project-create-date\">Today</div>\n            <div className=\"project-delete\" onClick = {(e) => {\n              // console.log(\"e ? \", e);\n              e.stopPropagation();\n              this.props.deleteProjectFromParent(this.props.data)}}/>\n              {/* </div> */}\n              </div>\n            </div>\n    );\n  }\n}\n\nexport default ProjectsComponent;"]},"metadata":{},"sourceType":"module"}