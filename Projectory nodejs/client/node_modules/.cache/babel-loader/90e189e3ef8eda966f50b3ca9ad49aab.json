{"ast":null,"code":"var _jsxFileName = \"/home/spectory/Documents/Projectory nodejs/client/src/components/login.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport \"./login.scss\";\nimport history from \"../index\";\nimport { connect } from 'react-redux';\nimport * as actions from '../js/actions';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: true,\n      password: \"\",\n      email: \"\"\n    };\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.toggleShow = this.toggleShow.bind(this);\n    this.onSubmit = this.onSubmit.bind(this); // window['login'] = this;\n  }\n\n  async onSubmit() {\n    // if(true) // In case we want to check something\n    // let emailAddress = document.getElementsByClassName('emailText')[0].innerText;\n    // let password = document.getElementsByClassName('showPasswordText')[0].innerHTML;\n    if (this.state.password === '' || this.state.email === '') {\n      return;\n    }\n\n    const response = await fetch('http://localhost:5000/userConnection', {\n      method: 'POST',\n      // mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": this.state.email\n      })\n    });\n    const myJson = await response.json(); // console.log(myJson.email);\n\n    debugger;\n    this.props.loggedUser(myJson.email);\n    this.props.switchDisplay(myJson.theme); // console.log('still working');\n    // console.log(this.state.username);\n    // debugger;\n    // const response = await fetch('http://localhost:5000/');\n    // const myJson = await response.json();\n    // console.log(myJson);\n\n    history.push(\"/projects\");\n  }\n\n  handlePasswordChange(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleEmailChange(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  toggleShow() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.password) {\n      this.setState({\n        password: this.props.password\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          display = _this$props.display,\n          email = _this$props.email;\n    return React.createElement(\"div\", {\n      className: \"loginPageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo \".concat(display),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"loginBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signIn \".concat(display),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"div\", {\n      className: \"enterDetailsBelow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Enter your details below\"), React.createElement(\"div\", {\n      className: \"enterEmailAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Email Address\"), React.createElement(\"div\", {\n      className: \"rectangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailAddress\",\n      value: this.state.username,\n      className: \"emailText\",\n      placeholder: \"Type your email here\",\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"enterPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Password\", React.createElement(\"span\", {\n      className: \"forgotPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Forgot your password?\")), React.createElement(\"div\", {\n      className: \"rectangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: this.state.hidden ? \"password\" : \"text\",\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      name: \"password\",\n      className: \"passwordText\",\n      placeholder: \"Type your password here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: this.state.hidden ? \"showPassword\" : \"showPasswordText \".concat(display),\n      onClick: this.toggleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"submitForm \".concat(display),\n      type: \"button\",\n      value: \"Sign in\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    // email: state.email,\n    display: state.display,\n    email: state.email\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    switchDisplay: display => dispatch(actions.switchDisplay(display)),\n    // makeAction: display => dispatch({ type: T.SWITCH_DISPLAY, display: display }),\n    // makeAction: email => dispatch(actions.)\n    loggedUser: email => dispatch(actions.activeUser(email))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);","map":{"version":3,"sources":["/home/spectory/Documents/Projectory nodejs/client/src/components/login.js"],"names":["React","Component","history","connect","actions","LoginComponent","constructor","props","state","hidden","password","email","handlePasswordChange","bind","handleEmailChange","toggleShow","onSubmit","response","fetch","method","headers","body","JSON","stringify","myJson","json","loggedUser","switchDisplay","theme","push","e","setState","target","value","componentDidMount","render","display","username","mapStateToProps","mapDispatchToProps","dispatch","activeUser"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Component} from \"react\";\nimport \"./login.scss\"\nimport history from \"../index\"\nimport { connect } from 'react-redux';\nimport * as actions from '../js/actions';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hidden: true,\n      password: \"\",\n      email: \"\",\n    };\n\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.toggleShow = this.toggleShow.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n\n    // window['login'] = this;\n  }\n\nasync onSubmit() {\n  // if(true) // In case we want to check something\n  // let emailAddress = document.getElementsByClassName('emailText')[0].innerText;\n  // let password = document.getElementsByClassName('showPasswordText')[0].innerHTML;\n  if(this.state.password === '' || this.state.email === ''){\n    return;\n  }\n\n  const response = await fetch('http://localhost:5000/userConnection', {\n    method: 'POST',\n    // mode: 'no-cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\"email\" : this.state.email})\n  });\n\n  const myJson = await response.json();\n  // console.log(myJson.email);\n  debugger;\n  this.props.loggedUser(myJson.email);\n  this.props.switchDisplay(myJson.theme);\n\n  // console.log('still working');\n  // console.log(this.state.username);\n  // debugger;\n  // const response = await fetch('http://localhost:5000/');\n  // const myJson = await response.json();\n\n  // console.log(myJson);\n  history.push(\"/projects\");\n}\n\n  handlePasswordChange(e) {\n    this.setState({ password: e.target.value });\n  }\n\n    handleEmailChange(e) {\n    this.setState({ email: e.target.value });\n  }\n\n  toggleShow() {\n    this.setState({ hidden: !this.state.hidden });\n  }\n\n  componentDidMount() {\n    if (this.props.password) {\n      this.setState({ password: this.props.password });\n    }\n  }\n\n  render() {\n    const { display, email } = this.props;\n    return (\n      <div className=\"loginPageContainer\">\n        <div className={`logo ${display}`}></div>\n        <div className=\"loginBox\">\n          <div className={`signIn ${display}`}>Sign in</div>\n          <div className=\"enterDetailsBelow\">Enter your details below</div>\n            <div className=\"enterEmailAddress\">Email Address</div>\n            <div className=\"rectangle\">\n              <input type=\"text\" name=\"emailAddress\" value={this.state.username} className=\"emailText\" placeholder=\"Type your email here\" onChange={this.handleEmailChange}/>\n            </div>\n            <div className=\"enterPassword\">Password<span className=\"forgotPassword\">Forgot your password?</span></div>\n            <div className=\"rectangle\">\n              <input type={this.state.hidden ? \"password\" : \"text\"} value={this.state.password} onChange={this.handlePasswordChange} name=\"password\" className=\"passwordText\" placeholder=\"Type your password here\"/>\n              <span className={this.state.hidden ? \"showPassword\" : `showPasswordText ${display}`} onClick={this.toggleShow}></span>\n            </div>\n            <input className={`submitForm ${display}`} type=\"button\" value=\"Sign in\" onClick={this.onSubmit}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n    // email: state.email,\n    display: state.display,\n    email : state.email\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    switchDisplay: display => dispatch(actions.switchDisplay(display)),\n    // makeAction: display => dispatch({ type: T.SWITCH_DISPLAY, display: display }),\n    // makeAction: email => dispatch(actions.)\n    loggedUser : email => dispatch(actions.activeUser(email)),\n    \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);"]},"metadata":{},"sourceType":"module"}