{"ast":null,"code":"var _jsxFileName = \"/home/spectory/Documents/Projectory2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './routing';\nimport * as serviceWorker from './serviceWorker';\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from 'react-redux';\nimport store from './js/store';\nexport default createBrowserHistory();\nimport initialState from \"./js/state/state\";\nconst DisplayContext = React.createContext();\n\nclass DisplayProvider extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(DisplayContext.Provider, {\n      value: this.props.display,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n} // export default DisplayProvider;\n// import index from \"./js/index\"\n\n\nReactDOM.render( //<Provider store={store}>\nReact.createElement(DisplayProvider, {\n  display: initialState.display,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})), //</Provider>, \ndocument.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); // import React from \"react\";\n// import { render } from \"react-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./store/index\";\n// import App from \"./components/App.jsx\";\n// // if you're in create-react-app import the files as:\n// // import store from \"./js/store/index\";\n// // import App from \"./js/components/App.jsx\";\n// render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>,\n//   // The target element might be either root or app,\n//   // depending on your development environment\n//   // document.getElementById(\"app\")\n//   document.getElementById(\"root\")","map":{"version":3,"sources":["/home/spectory/Documents/Projectory2/my-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createBrowserHistory","Provider","store","initialState","DisplayContext","createContext","DisplayProvider","Component","constructor","props","render","display","children","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,eAAeF,oBAAoB,EAAnC;AACA,OAAOG,YAAP,MAAyB,kBAAzB;AAEA,MAAMC,cAAc,GAAGR,KAAK,CAACS,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BV,KAAK,CAACW,SAApC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACD;;AAEHC,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAI,KAAKD,KAAL,CAAWE,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKF,KAAL,CAAWG,QAFhB,CADJ;AAOH;;AAbwC,C,CAgB7C;AAEA;;;AAEAf,QAAQ,CAACa,MAAT,EACI;AAEI,oBAAC,eAAD;AAAiB,EAAA,OAAO,EAAEP,YAAY,CAACQ,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CAHR,EASI;AAGAE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZJ,E,CAeA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd,G,CAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './routing';\nimport * as serviceWorker from './serviceWorker';\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from 'react-redux';\nimport store from './js/store';\nexport default createBrowserHistory();\nimport initialState from \"./js/state/state\"\n\nconst DisplayContext = React.createContext();\n\nclass DisplayProvider extends React.Component{\n    constructor(props) {\n        super(props);\n      }\n\n    render(){\n        return(\n            <DisplayContext.Provider value = {this.props.display}>\n\n                {this.props.children}\n\n            </DisplayContext.Provider>\n        );\n    }\n}\n\n// export default DisplayProvider;\n\n// import index from \"./js/index\"\n\nReactDOM.render(\n    //<Provider store={store}>\n\n        <DisplayProvider display={initialState.display}>\n\n            <App />\n\n        </DisplayProvider>,\n\n    //</Provider>, \n\n    \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n\n\n// import React from \"react\";\n// import { render } from \"react-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./store/index\";\n// import App from \"./components/App.jsx\";\n\n// // if you're in create-react-app import the files as:\n// // import store from \"./js/store/index\";\n// // import App from \"./js/components/App.jsx\";\n\n// render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>,\n\n//   // The target element might be either root or app,\n//   // depending on your development environment\n//   // document.getElementById(\"app\")\n\n//   document.getElementById(\"root\")\n\n"]},"metadata":{},"sourceType":"module"}